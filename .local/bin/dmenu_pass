#!/bin/sh

# Blatantly plagiarized and improved from passmenu

PREFIX="${PASSWORD_STORE_DIR:-'~/.password-store'}"

DMENU="$(command -v dmenu)"
PASS="$(command -v pass)"
XCLIP="$(command -v xclip)"
XDOTOOL="$(command -v xdotool)"

# helpers

die() {
    echo Error: "$@" >&2
    exit 1
}

do_dmenu() {
    "$DMENU" -i
}

do_pass() {
    "$PASS" "$@" 2>/dev/null
}

do_pass_clip() {
    CMD="$1"
    shift
    do_pass "$CMD" -c "$@"
}

do_xclip() {
    "$XCLIP" -selection c
}

do_xdotool() {
    tr -d '\n' | "$XDOTOOL" type --clearmodifiers --file -
}

get_special_match() {
    if MATCH="$(do_pass show "$1" | grep -i "^${2}:" 2>/dev/null)" ; then
        printf '%s' "$MATCH" | sed "s;^${2}:;;i"
    else
        printf '%s' "$3"
    fi
}

usage() {
    cat <<EOF
Usage: $(basename "$0") [type,clip [pass,otp,user]]
EOF
}

# Options

case "$1" in
    -h*|--h*|-?)
        usage
        exit ;;
esac

CONTENT="${2:-"$(printf 'password\notp\nusername' | "$DMENU")"}"
[ -z "$CONTENT" ] && die CONTENT was not provided
case "$CONTENT" in
    user*|pass*|otp) : ;;
    *) die CONTENT "'${CONTENT}'" is invalid
esac

ACTION="${1:-"$(printf 'type\nclipboard' | "$DMENU")"}"
[ -z "$ACTION" ] && die ACTION was not provided
case "$ACTION" in
    type|clip*) : ;;
    *) die ACTION "'${ACTION}'" is invalid
esac

ENTRY="$(find "$PREFIX" -name '*.gpg' | sed "s;^${PREFIX}/\?;; ; s;.gpg\$;;" | do_dmenu)"
[ -z "$ENTRY" ] && die ENTRY was not provided

case "$ACTION" in
    clip*) DO_PASS='do_pass_clip' ;;
    type) DO_PASS='do_pass' ;;
esac

case "$CONTENT" in
    pass*) "$DO_PASS" show "$ENTRY" | head -n 1 ;;
    otp) "$DO_PASS" otp "$ENTRY" | tail -n 1 ;;
    user*) get_special_match "$ENTRY" 'user\(name\)\?' "$(printf '%s' "$ENTRY" | sed 's;.*/;;')" | \
        case "$ACTION" in
            clip*) do_xclip ;;
            type) do_xdotool ;;
        esac ;;
esac | \
    case "$ACTION" in
        clip*) : ;;
        type) do_xdotool ;;
    esac

# Notification

case "$CONTENT" in
    pass*) PRETTY_CONTENT='Password' ;;
    otp) PRETTY_CONTENT='OTP' ;;
    user*) PRETTY_CONTENT='Username' ;;
esac

case "$ACTION" in
    clip*) PRETTY_ACTION='Copied' ;;
    type) PRETTY_ACTION='Typed' ;;
esac

notify-send \
    -c transient \
    "${PRETTY_ACTION} ${PRETTY_CONTENT}" \
    "$ENTRY"
