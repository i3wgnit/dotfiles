#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# == IMPORT ==
[ -s "$HOME/.config/bash/inputrc" ] && source "$HOME/.config/bash/inputrc"
[ -s "$HOME/.config/bash/bashrc.local" ] && source "$HOME/.config/bash/bashrc.local"
[ -s "$HOME/.config/bash/shortcuts" ] && source "$HOME/.config/bash/shortcuts"


# == PS1 ==
case ${USER} in
    waigni) _get_PS1() { echo -n '\[\e[0;97m\]w\[\e[38;5;250m\]a\[\e[38;5;245m\]i\[\e[38;5;81m\]g\[\e[38;5;45m\]n\[\e[38;5;39m\]i\[\e[1;97m\] \W \[\e[m\e(B\]' ; } ;;
    root)   _get_PS1() { echo -n '\[\e[0;91m\][root] \[\e[1;97m\]\W \[\e[m\e(B\]' ; } ;;
    *)      _get_PS1() { echo -n '\u \[\e[1;97m\]\W \[\e[m\e(B\]' ; } ;;
esac
export PS1="$(_get_PS1)${RANGER_LEVEL:+[ranger] }${SSH_TTY:+(ssh) }"


# == EXPORT ==
#export PS1="[\u@\h \W]\$ ${RANGER_LEVEL:+[ranger] }${SSH_TTY:+(ssh) }"
export EDITOR=vim
export VISUAL=vim
export TERMINAL=st
export BROWSER=firefox
export MAN_DISABLE_SECCOMP=1

# clipmenu
export CM_SELECTIONS=clipboard
export CM_LAUNCHER=rofi

export PATH="$HOME"/bin:/usr/local/bin:"$HOME"/.local/bin:"$PATH"


set -o vi


# == ALIAS ==
# ls
alias ls='ls --color=auto'
alias ll='ls -l'
alias la='ls -al'

# diff
alias diff='diff --color=auto'

# cd
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
# cd is probably faster ಠ_ಠ
alias ~="cd ~"
alias -- -="cd -"

# c/c++
alias gcc99="gcc -std=c99 -Wall"
alias g++14="g++ -std=c++14 -Wall"

# VIM
alias v="vim"

# Ranger
alias ra="ranger"

# Enable aliases to be sudo'ed
alias sudo="sudo "

# Stopwatch
alias sw="echo 'StopWatch started. Stop with Ctrl+D.' && time cat"

# Reload .bash_profile
alias br="source $HOME/.bashrc"

# Full system upgrade
# alias pSyyu="command yay --nouseask --noconfirm -Syyu"

# pacman
# alias p="command yay"

# xclip
alias xclip="xclip -selection c "


# == RANGER ==
ranger() {
    if [ -z "$RANGER_LEVEL" ]; then
        tempfile="$(mktemp -t tmp.XXXXXX)"
        trap "rm -f -- \"$tempfile\"" EXIT
        /usr/bin/ranger --choosedir="$tempfile" "${@:-$(pwd)}"
        test -f "$tempfile" &&
        if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
            cd -- "$(cat "$tempfile")"
        fi
    else
        exit
    fi
}

[[ -n RANGER_LEVEL ]] && clear


# == MPV ==
function mm() {
    mpv --no-video --ytdl-format=bestaudio ytdl://ytsearch:"$*"
}


# == nvm ==
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# == pyenv ==
export PYENV_ROOT="$HOME/src/pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
command -v pyenv 1>/dev/null 2>&1 &&\
    eval "$(pyenv init -)" &&\
    eval "$(pyenv virtualenv-init -)"

# == asymptote ==
export ASYMPTOTE_PSVIEWER=zathura
export ASYMPTOTE_PDFVIEWER=zathura

export QT_QPA_PLATFORMTHEME 'qt5ct'

# == stuff ==
export XDG_CACHE_HOME="$HOME"/.cache
export XDG_CONFIG_HOME="$HOME"/.config
export XDG_DATA_HOME="$HOME"/.local/share

export ASYMPTOTE_HOME="$XDG_CONFIG_HOME"/asy
export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
export GNUPGHOME="$XDG_CONFIG_HOME"/gnupg
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc
export HISTFILE="$XDG_DATA_HOME"/bash/history
export LESSHISTFILE="$XDG_DATA_HOME"/less/history
export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history
export NUGET_PACKAGES="$XDG_CACHE_HOME"/NuGetPackages
export PULSE_COOKIE="$XDG_CACHE_HOME"/pulse_cookie
export WGETRC="$XDG_CONFIG_HOME"/wgetrc
alias wget='wget --hsts-file="$XDG_CACHE_HOME"/wget-hsts'
export WINEPREFIX="$XDG_DATA_HOME"/wineprefixes/default
export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
